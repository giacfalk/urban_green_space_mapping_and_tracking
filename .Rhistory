View(ci_emis)
ci_emis <- dplyr::select(ci_emis, Scenario, Region, Unit, `2020`, `2050`)
4718.36205/1e3
ci_emis$`2050` <- ci_emis$`2050` * 1000000000000  # convert to grams
ci_emis$`2020` <- ci_emis$`2020` * 1000000000000  # convert to grams
ely_lab <- unique(ci$Variable)[grep("Electricity", unique(ci$Variable))][136:152]
ely_lab
unique(ci$Variable)[grep("Electricity", unique(ci$Variable))]
ely_lab
ely_lab <- unique(ci$Variable)[grep("Electricity", unique(ci$Variable))][136:152]
ci_ely <- filter(ci, Variable %in% ely_lab[c(1:5, 9:10, 12, 15:17)])
ci_ely <- filter(ci_ely, Scenario %in% c("SSP2_BASE", "SSP5-baseline"))
ci_ely <- group_by(ci_ely, Scenario, Region, Unit) %>% dplyr::summarise(`2020` = sum(`2020`, na.rm=T), `2050`=sum(`2050`, na.rm=T))
ci_ely$`2050` <- ci_ely$`2050` * 277777777777.78
ci_ely$`2020` <- ci_ely$`2020` * 277777777777.78
View(ci_ely)
View(ci_emis)
View(ci_ely)
View(ci_ely)
ci_emis <- ci_emis[with(ci_emis, order(Region, Scenario)), ]
View(ci_emis)
ci_ely <- ci_ely[with(ci_ely, order(Region, Scenario)), ]
ci_emis$ci_intensity_2020 <- ci_emis$`2020` / ci_ely$`2020`
ci_emis$ci_intensity_2050 <- ci_emis$`2050` / ci_ely$`2050`
View(ci_emis)
ll_emis <- ll
ll_emis <- filter(ll_emis, stat=="Total AC-induced consumption")
# parse regions
ll_emis$country_bk <- ll_emis$country
ll_emis$country[ll_emis$country=="ARG"] <- "BRA"
ll_emis$country[ll_emis$country=="Africa"] <- "ZAF"
ll_emis$country[ll_emis$country=="DEU"] <- "EU"
ll_emis$country[ll_emis$country=="ITA"] <- "EU"
ll_emis$country[ll_emis$country=="OECD_EU"] <- "EU"
ll_emis$country[ll_emis$country=="OECD_NONEU"] <- "JPN"
ll_emis$country[ll_emis$country=="PAK"] <- "IND"
# merge
ci_emis <- pivot_longer(ci_emis, 6:7)
ci_emis$name <- gsub("ci_intensity_", "", ci_emis$name)
ci_emis$Scenario <- ifelse(ci_emis$Scenario=="SSP5-baseline", "SSP585 (2050)", "SSP245 (2050)")
ci_emis$Scenario <- ifelse(ci_emis$name=="2020", "2020", ci_emis$Scenario)
colnames(ci_emis)[7] <- "emission_factor"
colnames(ll_emis)[5] <- "ely_ac"
merger <- merge(ll_emis, ci_emis, by.x=c("ssp", "country"), by.y=c("Scenario", "Region"), all.x=T)
merger <- group_by(merger, year, country) %>% mutate(`2020`=ifelse(is.na(`2020`), mean(`2020`, na.rm=T), `2020`), `2050`=ifelse(is.na(`2050`), mean(`2050`, na.rm=T), `2050`), emission_factor=ifelse(is.na(emission_factor), mean(emission_factor, na.rm=T), emission_factor)) %>% ungroup()
merger$mtco2 <- merger$ely_ac * merger$emission_factor / 1000000000000
merger <- group_by(merger, ssp, country) %>% dplyr::summarise(mtco2=mean(mtco2, na.rm=T))
View(merger)
View(ll)
View(merger)
View(ll)
emis_lab <- unique(ci$Variable)[grep("Electricity", unique(ci$Variable))][88]
ci_emis <- filter(ci, Variable %in% emis_lab)
ci_emis <- filter(ci_emis, Scenario %in% c("SSP2_BASE", "SSP5-baseline"))
ci_emis <- dplyr::select(ci_emis, Scenario, Region, Unit, `2020`, `2050`)
ci_emis$`2050` <- ci_emis$`2050` * 1000000000000  # convert to grams
ci_emis$`2020` <- ci_emis$`2020` * 1000000000000  # convert to grams
ely_lab <- unique(ci$Variable)[grep("Electricity", unique(ci$Variable))][136:152]
ci_ely <- filter(ci, Variable %in% ely_lab[c(1:5, 9:10, 12, 15:17)])
ci_ely <- filter(ci_ely, Scenario %in% c("SSP2_BASE", "SSP5-baseline"))
ci_ely <- group_by(ci_ely, Scenario, Region, Unit) %>% dplyr::summarise(`2020` = sum(`2020`, na.rm=T), `2050`=sum(`2050`, na.rm=T))
ci_ely$`2050` <- ci_ely$`2050` * 277777777777.78
ci_ely$`2020` <- ci_ely$`2020` * 277777777777.78
ci_emis <- ci_emis[with(ci_emis, order(Region, Scenario)), ]
ci_ely <- ci_ely[with(ci_ely, order(Region, Scenario)), ]
ci_emis$ci_intensity_2020 <- ci_emis$`2020` / ci_ely$`2020`
ci_emis$ci_intensity_2050 <- ci_emis$`2050` / ci_ely$`2050`
ll_emis <- ll
ll_emis <- filter(ll_emis, stat=="Total AC-induced consumption")
# parse regions
ll_emis$country_bk <- ll_emis$country
ll_emis$country[ll_emis$country=="ARG"] <- "BRA"
ll_emis$country[ll_emis$country=="Africa"] <- "ZAF"
ll_emis$country[ll_emis$country=="DEU"] <- "EU"
ll_emis$country[ll_emis$country=="ITA"] <- "EU"
ll_emis$country[ll_emis$country=="OECD_EU"] <- "EU"
ll_emis$country[ll_emis$country=="OECD_NONEU"] <- "JPN"
ll_emis$country[ll_emis$country=="PAK"] <- "IND"
# merge
ci_emis <- pivot_longer(ci_emis, 6:7)
ci_emis$name <- gsub("ci_intensity_", "", ci_emis$name)
ci_emis$Scenario <- ifelse(ci_emis$Scenario=="SSP5-baseline", "SSP585 (2050)", "SSP245 (2050)")
ci_emis$Scenario <- ifelse(ci_emis$name=="2020", "2020", ci_emis$Scenario)
colnames(ci_emis)[7] <- "emission_factor"
colnames(ll_emis)[5] <- "ely_ac"
merger <- merge(ll_emis, ci_emis, by.x=c("ssp", "country"), by.y=c("Scenario", "Region"), all.x=T)
merger <- group_by(merger, year, country, country_bk) %>% mutate(`2020`=ifelse(is.na(`2020`), mean(`2020`, na.rm=T), `2020`), `2050`=ifelse(is.na(`2050`), mean(`2050`, na.rm=T), `2050`), emission_factor=ifelse(is.na(emission_factor), mean(emission_factor, na.rm=T), emission_factor)) %>% ungroup()
merger$mtco2 <- merger$ely_ac * merger$emission_factor / 1000000000000
merger <- group_by(merger, ssp, country, country_bk) %>% dplyr::summarise(mtco2=mean(mtco2, na.rm=T))
ll <- merge(ll, merger, all.x=T, by.x=c("ssp", "country"), by.y=c("", ""))
View(merger)
ll <- merge(ll, merger, all.x=T, by.x=c("ssp", "country"), by.y=c("ssp", "country_bk"))
View(ll)
ll_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="national_ac_penetration.csv", full.names = T)
ll <- lapply(ll_list, read.csv)
for (i in 1:length(ll)){
ll[[i]]$country <- gsub("_national_ac_penetration.csv", "", basename(ll_list[i]))
}
ll <- as.data.frame(do.call(rbind, ll))
ll$X <- NULL
ll$stat <- "AC penetration rate"
#
ll2_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="_national_ac_consumption.csv", full.names = T)
ll2 <- lapply(ll2_list, read.csv)
for (i in 1:length(ll2)){
ll2[[i]]$country <- gsub("_national_ac_consumption.csv", "", basename(ll2_list[i]))
ll2[[i]]$value <- ll2[[i]]$value_tot
ll2[[i]]$value_tot <- NULL
}
ll2 <- as.data.frame(do.call(rbind, ll2))
ll2$X <- NULL
ll2$stat <- "Total AC-induced consumption"
#
ll3_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="_national_ac_consumption_total.csv", full.names = T)
ll3 <- lapply(ll3_list, read.csv)
for (i in 1:length(ll3)){
ll3[[i]]$country <- gsub("_national_ac_consumption_total.csv", "", basename(ll3_list[i]))
}
ll3 <- as.data.frame(do.call(rbind, ll3))
ll3$X <- NULL
ll3$stat <- "Per-capita AC consumption"
##
ll <- bind_rows(ll, ll2, ll3)
ll <- dplyr::filter(ll, year==2020 | year==2050)
ll$ssp <- as.character(ll$ssp)
ll$ssp <- ifelse(ll$year==2020, "2020", ll$ssp)
ll$ssp <- ifelse(ll$ssp=="SSP245", "SSP245 (2050)", ll$ssp)
ll$ssp <- ifelse(ll$ssp=="SSP585", "SSP585 (2050)", ll$ssp)
ll <- group_by(ll, ssp, year, country, stat) %>% dplyr::summarise(value=mean(value, na.rm=T))
View(ll)
View(merger)
merger$country <- NULL
colnames(merger)
colnames(merger)[2] <- "country"
merger$stat <- "CO2 emissions"
merger$year <- ifelse(merger$year==2020, 2020, 2050)
merger$year <- ifelse(merger$ssp==2020, 2020, 2050)
colnames(merger)[3] <- "value"
ll <- bind_rows(ll, merger)
ll$year <- NULL
library(modelsummary)
ll$value <- ifelse(ll$stat=="Total AC-induced consumption", ll$value/1e9, ll$value)
ll$value <- ifelse(ll$stat=="AC penetration rate", ll$value*100, ll$value)
ll$stat <- ifelse(ll$stat=="Total AC-induced consumption", "Total AC-induced consumption (TWh)", ifelse(ll$stat=="Per-capita AC consumption", "Per-capita AC consumption (avg. kWh/hh/yr)", ifelse(ll$stat=="AC penetration rate", "AC penetration rate (%)", "CO2 emissions (Mt/yr)")))
ll2 <- ll %>%
mutate_if(is.numeric, round, 2)
emptycol <- function(x) " "
datasummary(value * country ~ stat * ssp * (Mean),
data = ll2, output = "big_res_table.tex")
ll_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="national_ac_penetration.csv", full.names = T)
ll <- lapply(ll_list, read.csv)
for (i in 1:length(ll)){
ll[[i]]$country <- gsub("_national_ac_penetration.csv", "", basename(ll_list[i]))
}
ll <- as.data.frame(do.call(rbind, ll))
ll$X <- NULL
ll$stat <- "AC penetration rate"
#
ll2_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="_national_ac_consumption.csv", full.names = T)
ll2 <- lapply(ll2_list, read.csv)
for (i in 1:length(ll2)){
ll2[[i]]$country <- gsub("_national_ac_consumption.csv", "", basename(ll2_list[i]))
ll2[[i]]$value <- ll2[[i]]$value_tot
ll2[[i]]$value_tot <- NULL
}
ll2 <- as.data.frame(do.call(rbind, ll2))
ll2$X <- NULL
ll2$stat <- "Total AC-induced consumption"
#
ll3_list <- list.files(path=paste0(stub, "results/household_level/"), pattern="_national_ac_consumption_total.csv", full.names = T)
ll3 <- lapply(ll3_list, read.csv)
for (i in 1:length(ll3)){
ll3[[i]]$country <- gsub("_national_ac_consumption_total.csv", "", basename(ll3_list[i]))
}
ll3 <- as.data.frame(do.call(rbind, ll3))
ll3$X <- NULL
ll3$stat <- "Per-capita AC consumption"
##
ll <- bind_rows(ll, ll2, ll3)
ll <- dplyr::filter(ll, year==2020 | year==2050)
ll$ssp <- as.character(ll$ssp)
ll$ssp <- ifelse(ll$year==2020, "2020", ll$ssp)
ll$ssp <- ifelse(ll$ssp=="SSP245", "SSP245 (2050)", ll$ssp)
ll$ssp <- ifelse(ll$ssp=="SSP585", "SSP585 (2050)", ll$ssp)
ll <- group_by(ll, ssp, year, country, stat) %>% dplyr::summarise(value=mean(value, na.rm=T))
ll <- bind_rows(ll, merger)
#############
ll$year <- NULL
library(modelsummary)
ll$value <- ifelse(ll$stat=="Total AC-induced consumption", ll$value/1e9, ll$value)
ll$value <- ifelse(ll$stat=="AC penetration rate", ll$value*100, ll$value)
ll$stat <- ifelse(ll$stat=="Total AC-induced consumption", "Total AC-induced consumption (TWh)", ifelse(ll$stat=="Per-capita AC consumption", "Per-capita AC consumption (avg. kWh/hh/yr)", ifelse(ll$stat=="AC penetration rate", "AC penetration rate (%)", "Total CO2 emissions (Mt/yr)")))
ll2 <- ll %>%
mutate_if(is.numeric, round, 2)
emptycol <- function(x) " "
datasummary(value * country ~ stat * ssp * (Mean),
data = ll2, output = "big_res_table.tex")
datasummary(value * country ~ stat * ssp * (Mean),
data = ll2, output = "big_res_table.tex")
library(tidyverse)
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/RECS/recs2020_public_v1.csv")
r$AIRCOND
summary(r$AIRCOND)
r$ELCOOL
summary(r$ELCOOL)
summary(r$AIRCOND)
r$MONEYPY
r$state_name
r$ELPAY
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/household.csv")
r$ACPRIMARY
table(r$ACPRIMARY)
r$ELECAMT
r$WEIGHT
r$HINCP
table(r$ACPRIMARY)
r$ACPRIMARY <- ifelse(r$ACPRIMARY!='12', 1, 0)
summary(r$ACPRIMARY)
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/household.csv")
r$ACPRIMARYy <- as.numeric(as.character(r$ACPRIMARY))
r$ACPRIMARY <- ifelse(r$ACPRIMARY!='12', 1, 0)
r$ACPRIMARYy
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/household.csv")
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/household.csv")
r$ACPRIMARYy <- as.numeric(as.character(r$ACPRIMARY))
r$ACPRIMARY <- ifelse(r$ACPRIMARY!='12', 1, 0)
r$ELECAMT
r$HINCP
r$WEIGHT
r$HINCP
r$ELECAMT
r$ACPRIMARYy <- as.numeric(as.character(r$ACPRIMARY))
summary(r$ACPRIMARYy )
as.character(r$ACPRIMARY)
r$ACPRIMARY
View(r$ACPRIMARY)
summary(r$ACPRIMARY)
table(r$ACPRIMARY)
r <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/household.csv", stringsAsFactors = F)
r$ACPRIMARY
r$ACPRIMARYy <- ifelse(r$ACPRIMARY!="'12'", 1, 0)
r$ACPRIMARYy
table(r$ACPRIMARYy )
55085/(55085+8100)
r$ELECAMT
r$HHSEX
r$HHAGE
r$EDUCATION
r$HHGRAD
r$NUMPEOPLE
summary(r$ELECAMT)
table(r$ELECAMT)
r$ELECAMT
r$ELECAMT <- ifelse(r$ELECAMT>=4, r$ELECAMT, NA)
r$ELECAMT
r$HINCP
r$TENURE
r$TENURE <- ifelse(r$TENURE!="'1'", 1, 0)
r$HHSEX <- ifelse(r$HHSEX!="'2'", 1, 0)
r$HHAGE
r$HHAGE <- ifelse(r$HHAGE>=0, r$HHAGE, NA)
r$EDUCATION
EDUCATION
r$HHGRAD
r$NUMPEOPLE
r$NUMYNGKIDS
r$NUMOLDKIDS
r$COUNTY_2010
r$STATE
r2 <- read.csv("project.csv")
r2 <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/project.csv")
r2 <- read.csv("H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/data/household/United States/AHS/person.csv")
r$URBAN_2010
r$URBAN_2010 <- # MISSING!
r$STATE_2010 <- # MISSING!
####
r <- dplyr::select(a, ACPRIMARY, ELECAMT, HINCP, TENURE, HHSEX, HHAGE, edu_head_2, NUMPEOPLE, share_under_16, WEIGHT)
r$URBAN_2010 <- # MISSING!
r$STATE_2010 <- # MISSING!
####
r <- dplyr::select(r, ACPRIMARY, ELECAMT, HINCP, TENURE, HHSEX, HHAGE, edu_head_2, NUMPEOPLE, share_under_16, WEIGHT)
#https://www.overleaf.com/project/612d4f20a1328578aada68c9
# Go on with data analysis; start seriously writing paper even if results are still not great -> Perhaps think about validation against some high-resolution land cover maps [14.30 - 17]
##########################
##########################
library(rgee)
library(sf)
library(tidyverse)
ee_Initialize()
library(lubridate)
library(raster)
library(exactextractr)
#
setwd("D:/OneDrive - IIASA/Current papers/greening/urban_green_space_mapping_and_tracking")
#
ndvi_threshold <- 0.15 # NDVI threshold to consider an urban area covered by some vegetation
change_threshold <- 0.1 # minimum change in NDVI to assign pixel as "with vegetation status change"
###############
# Local data
sf <- read_sf("data/ucdb.shp") # Cities database
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") # Country borders shapefile
pop <- raster("data/GHS_POP_E2015_GLOBE_R2019A_4326_30ss_V1_0.tif") # Gridded population
sf$P15 <- exactextractr::exact_extract(pop, sf, "sum")
sf$X= st_coordinates(st_centroid(sf))[,1]
sf$Y= st_coordinates(st_centroid(sf))[,2]
cities1 <- readRDS(paste0("cities1_", ndvi_threshold, ".Rds"))
###############
# Google Earth Engine
table = ee$FeatureCollection("users/giacomofalchetta/UC_cities_global")
iml8 = ee$ImageCollection("LANDSAT/LC08/C01/T1_32DAY_NDVI")$select('NDVI')
image1 = ee$Image(
iml8$filterDate("2014-01-01","2015-01-01")
$max()
);
image2 = ee$Image(
iml8$filterDate("2020-01-01","2021-01-01")
$max()
);
builtup = ee$Image("JRC/GHSL/P2016/BUILT_LDSMT_GLOBE_V1")$select("built")
builtup = builtup$gte(3)
builtup = builtup$mask(builtup$eq(1))
# cropland = ee$Image("USGS/GFSAD1000_V1")$eq(0)
# cropland = cropland$mask(cropland$eq(1))
image1 = image1$mask(builtup)
image2 = image2$mask(builtup)
area = ee$Image$pixelArea()$divide(1000000)
ndvi_plus = image2$subtract(image1)
ndvi_plus = ndvi_plus$gte(change_threshold)$And(image2$gte(ndvi_threshold))
ndvi_plus <- ndvi_plus$multiply(area)
ndvi_plus <- ndvi_plus$mask(ndvi_plus$gt(0))
ndvi_minus = image2$subtract(image1)
ndvi_minus = ndvi_minus$lte(-change_threshold)$And(image1$gte(ndvi_threshold))
ndvi_minus <- ndvi_minus$multiply(area)
ndvi_minus <- ndvi_minus$mask(ndvi_minus$gt(0))
scale = ndvi_minus$projection()$nominalScale()
cities1 <- ndvi_plus$reduceRegions(reducer = ee$Reducer$sum(), collection=table, scale=1000) %>% ee_as_sf(via="drive")
cities2 <- ndvi_minus$reduceRegions(reducer = ee$Reducer$sum(), collection=table, scale=1000) %>% ee_as_sf(via="drive")
green_area_2020 = image2$gte(ndvi_threshold)
green_area_2020 <- green_area_2020$multiply(area)
green_area_2020 <- green_area_2020$mask(green_area_2020$gt(0))
cities3 <- green_area_2020$reduceRegions(reducer = ee$Reducer$sum(), collection=table, scale=1000) %>% ee_as_sf(via="drive")
builtup_sum <- builtup$reduceRegions(reducer = ee$Reducer$sum(), collection=table, scale=1000) %>% ee_as_sf(via="drive")
image2 = ee$Image(
iml8$filterDate("2020-01-01","2021-01-01")
$max()
);
builtup = ee$Image("JRC/GHSL/P2016/BUILT_LDSMT_GLOBE_V1")$select("built")
builtup = builtup$lt(3)
builtup = builtup$mask(builtup$eq(1))
image2 = image2$mask(builtup)
parks = image2$gte(ndvi_threshold)
parks <- parks$multiply(area)
parks <- parks$mask(parks$gt(0))
cities4 <- parks$reduceRegions(reducer = ee$Reducer$sum(), collection=table, scale=1000) %>% ee_as_sf(via="drive")
save(cities1, file = paste0("cities1_", ndvi_threshold, ".Rds"))
save(cities2, file = paste0("cities2_", ndvi_threshold, ".Rds"))
save(cities3, file = paste0("cities3_", ndvi_threshold, ".Rds"))
save(builtup_sum, file = paste0("builtup_sum_", ndvi_threshold, ".Rds"))
save(cities4, file = paste0("cities4_", ndvi_threshold, ".Rds"))
#
cities1 <- cities1 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities1 <- cities1[order(cities1$fid),]
cities1 <- cities1$sum
cities2 <- cities2 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities2 <- cities2[order(cities2$fid),]
cities2 <- cities2$sum
cities3 <- cities3 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities3 <- cities3[order(cities3$fid),]
cities3 <- cities3$sum
builtup_sum <- builtup_sum %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
builtup_sum <- builtup_sum[order(builtup_sum$fid),]
builtup_sum <- builtup_sum$sum
cities4 <- cities4 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities4 <- cities4[order(cities4$fid),]
cities4 <- cities4$sum
delta <- cities1 - cities2
#
sf <- bind_cols(sf, cities1, cities2, cities3, delta, builtup_sum, cities4)
sf$posneg <- ifelse(sf$...7 < -0.2, "Green space shrinking",  ifelse(sf$...7> -0.2 & sf$...7<0.2, "Green space idle", "Green space growing"))
sf$share <- sf$...6/sf$...8
sf$share <- sf$...7/sf$...9
sf$share
summary(sf$share )
ggplot()+
geom_sf(data=world)+
geom_point(data=filter(sf, P15>1e6), aes(x=X, y=Y, colour=...6/AREA), size=4)+
geom_text(data=filter(sf, P15>1e6), aes(x=X, y=Y, label=abs(round(...6/AREA, 1))), nudge_y = .5)+
theme_classic()+
coord_sf(ylim=c(34, 70), xlim=c(-10, 90))+
scale_color_viridis_c(name="", label=scales::label_percent())+
ggtitle("Share of city area with built-up pixels containing green space")
ggplot()+
geom_sf(data=world)+
geom_point(data=filter(sf, P15>1e6), aes(x=X, y=Y, colour=...7/AREA), size=4)+
geom_text(data=filter(sf, P15>1e6), aes(x=X, y=Y, label=abs(round(...7/AREA, 1))), nudge_y = .5)+
theme_classic()+
coord_sf(ylim=c(34, 70), xlim=c(-10, 90))+
scale_color_viridis_c(name="", label=scales::label_percent())+
ggtitle("Share of city area with built-up pixels containing green space")
ggplot()+
geom_sf(data=world)+
geom_point(data=filter(sf, P15>1e6), aes(x=X, y=Y, colour=...7/AREA), size=4)+
geom_text(data=filter(sf, P15>1e6), aes(x=X, y=Y, label=abs(round(...7/AREA, 1))), nudge_y = .5)+
theme_classic()+
coord_sf(ylim=c(-37, 34), xlim=c(-10, 90))+
scale_color_viridis_c(name="", label=scales::label_percent())+
ggtitle("Share of built-up pixels containing green space")
cities1 <- readRDS(paste0("cities1_", ndvi_threshold, ".Rds"))
cities2 <- readRDS(paste0("cities2_", ndvi_threshold, ".Rds"))
paste0("cities1_", ndvi_threshold, ".Rds")
cities1 <- readRDS(file=paste0("cities1_", ndvi_threshold, ".Rds"))
cities1 <- read_rds(paste0("cities1_", ndvi_threshold, ".Rds"))
cities1 <- readRDS(paste0("cities1_", ndvi_threshold, ".Rdata"))
cities1 <- load(paste0("cities1_", ndvi_threshold, ".Rdata"))
load(paste0("cities1_", ndvi_threshold, ".Rds"))
load(paste0("cities2_", ndvi_threshold, ".Rds"))
load(paste0("cities2_", ndvi_threshold, ".Rds"))
load(paste0("cities3_", ndvi_threshold, ".Rds"))
load(paste0("cities4_", ndvi_threshold, ".Rds"))
load(paste0("builtup_sum", ndvi_threshold, ".Rds"))
load(paste0("builtup_sum_", ndvi_threshold, ".Rds"))
#
cities1 <- cities1 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities1 <- cities1[order(cities1$fid),]
cities1 <- cities1$sum
cities2 <- cities2 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities2 <- cities2[order(cities2$fid),]
cities2 <- cities2$sum
cities3 <- cities3 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities3 <- cities3[order(cities3$fid),]
cities3 <- cities3$sum
builtup_sum <- builtup_sum %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
builtup_sum <- builtup_sum[order(builtup_sum$fid),]
builtup_sum <- builtup_sum$sum
cities4 <- cities4 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities4 <- cities4[order(cities4$fid),]
cities4 <- cities4$sum
delta <- cities1 - cities2
sf <- read_sf("data/ucdb.shp") # Cities database
sf <- bind_cols(sf, cities1, cities2, cities3, delta, builtup_sum, cities4)
sf$posneg <- ifelse(sf$...7 < -0.2, "Green space shrinking",  ifelse(sf$...7> -0.2 & sf$...7<0.2, "Green space idle", "Green space growing"))
sf$posneg
table(sf$posneg )
cities1
sf$share <- sf$...6/sf$...8
sf$share
summary(sf$share )
delta
sf$share <- sf$...6/sf$...8
sf$share
ggplot()+
geom_sf(data=world)+
geom_point(data=filter(sf, P15>1e6), aes(x=X, y=Y, colour=...6/AREA), size=4)+
geom_text(data=filter(sf, P15>1e6), aes(x=X, y=Y, label=abs(round(...6/AREA, 1))), nudge_y = .5)+
theme_classic()+
coord_sf(ylim=c(34, 70), xlim=c(-10, 90))+
scale_color_viridis_c(name="", label=scales::label_percent())+
ggtitle("Share of city area with built-up pixels containing green space")
sf <- read_sf("data/ucdb.shp") # Cities database
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") # Country borders shapefile
pop <- raster("data/GHS_POP_E2015_GLOBE_R2019A_4326_30ss_V1_0.tif") # Gridded population
sf$P15 <- exactextractr::exact_extract(pop, sf, "sum")
sf$X= st_coordinates(st_centroid(sf))[,1]
sf$Y= st_coordinates(st_centroid(sf))[,2]
#
sf <- bind_cols(sf, cities1, cities2, cities3, delta, builtup_sum, cities4)
sf$posneg <- ifelse(sf$...7 < -0.2, "Green space shrinking",  ifelse(sf$...7> -0.2 & sf$...7<0.2, "Green space idle", "Green space growing"))
sf$share <- sf$...6/sf$...8
ggplot()+
geom_sf(data=world)+
geom_point(data=filter(sf, P15>1e6), aes(x=X, y=Y, colour=...6/AREA), size=4)+
geom_text(data=filter(sf, P15>1e6), aes(x=X, y=Y, label=abs(round(...6/AREA, 1))), nudge_y = .5)+
theme_classic()+
coord_sf(ylim=c(34, 70), xlim=c(-10, 90))+
scale_color_viridis_c(name="", label=scales::label_percent())+
ggtitle("Share of city area with built-up pixels containing green space")
###############
# Local data
sf <- read_sf("data/ucdb.shp") # Cities database
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") # Country borders shapefile
pop <- raster("data/GHS_POP_E2015_GLOBE_R2019A_4326_30ss_V1_0.tif") # Gridded population
sf$P15 <- exactextractr::exact_extract(pop, sf, "sum")
sf$X= st_coordinates(st_centroid(sf))[,1]
sf$Y= st_coordinates(st_centroid(sf))[,2]
################
# Processed data wrangling
load(paste0("cities1_", ndvi_threshold, ".Rds"))
load(paste0("cities2_", ndvi_threshold, ".Rds"))
load(paste0("cities3_", ndvi_threshold, ".Rds"))
load(paste0("cities4_", ndvi_threshold, ".Rds"))
load(paste0("builtup_sum_", ndvi_threshold, ".Rds"))
#
cities1 <- cities1 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities1 <- cities1[order(cities1$fid),]
cities1 <- cities1$sum
cities2 <- cities2 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities2 <- cities2[order(cities2$fid),]
cities2 <- cities2$sum
cities3 <- cities3 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities3 <- cities3[order(cities3$fid),]
cities3 <- cities3$sum
builtup_sum <- builtup_sum %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
builtup_sum <- builtup_sum[order(builtup_sum$fid),]
builtup_sum <- builtup_sum$sum
cities4 <- cities4 %>% mutate(geometry=NULL, AREA=NULL) %>% as.data.frame()
cities4 <- cities4[order(cities4$fid),]
cities4 <- cities4$sum
delta <- cities1 - cities2
#
sf <- bind_cols(sf, cities1, cities2, cities3, delta, builtup_sum, cities4)
sf$posneg <- ifelse(sf$...7 < -0.2, "Green space shrinking",  ifelse(sf$...7> -0.2 & sf$...7<0.2, "Green space idle", "Green space growing"))
sf$share <- sf$...6/sf$...8
